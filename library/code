struct PTable{
    int n;
    vector<int> table;
    PTable(int n)n(n):{
        calc();
    }
    void calc(){
        table.resize(n+1,1);
        for(int i=2;i<=n;i++){
            if(table[i]!=1)continue;
            for(int j=i;j<=n;j+=i){
                table[j]=i;
            }
        }
    }
    //aの最大の素因数を返して、aを割る
    int operator()(int &a){
        int x=table[a];
        a/=table[a];
        return x;
    }
    //素因数分解::pfact(数字,いれもの,falseなら1はいれない)
    vector<int> pfact(int a,vector<int> b,bool tof=true){
        while(1){
            if(table[a]==1)break;
            b.push_back(table[a]);
            a/=table[a];
        }
        if(tof)b.push_back(1);
        return b;
    }
}